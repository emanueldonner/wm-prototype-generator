/**
 ** Styles for the page and sectioning content
 **/

/**
** ☕️☕️☕️ Page wrapper ☕️☕️☕️
**/
html {
  background: var(--root-background);
}

body {
  background: var(--site-background);
  color: var(--site-color);
  display: flex;
  flex-direction: column;
  font-family: var(--site-font-family);
  font-size: var(--site-font-size);
  font-size-adjust: 0.5;
  line-height: var(--site-line-height);
  margin: 0;
  max-width: var(--site-width);
  min-height: 100%;
  gap: var(--site-gap);
}

/* React */
#root {
  display: inherit;
  flex-direction: inherit;
  flex-grow: 1;;
}

:is(body, #root) > * {
  width: 100%;
}

/**
 ** ☕️☕️☕️ Header ☕️☕️☕️
 ** The header wrapper element
 ** This doesn't apply to all <header> elements, but only to <header> landmarks.
 **
 **/
:is(body > header, [role="banner"]) {
  --_height: calc(var(--header-height-dynamic) + var(--header-nav-height) + 0.5rem);
  background-color: var(--header-background);
  box-shadow: var(--header-shadow);
  color: var(--header-color);
  display: flex;
  flex-direction: column;
  height: var(--_height);
  inset-block-start: 0;
  inset-inline-start: 0;
  justify-content: end;
  margin-block: var(--header-margin-block-start) var(--header-margin-block-end);
  margin-inline: var(--header-margin-inline);
  max-width: var(--header-width);
  padding: var(--header-padding);
  position: var(--header-position);
  z-index: var(--header-z-index);
}

/**
 ** ☕️☕️☕️ Main ☕️☕️☕️
 **/
main {
  --_layout: var(--site-wrapper-padding) minmax(auto, var(--site-wrapper-width-s)) var(--site-wrapper-padding);
  --_margin: auto;

  background-color: var(--main-background);
  flex-grow: 1;
  justify-content: center;
  margin-block: var(--site-wrapper-margin-block);
  margin-inline: var(--_margin);
  max-width: var(--site-wrapper-width);
  /* padding: var(--main-padding); */

  display: grid;
  align-content: start;
  grid-template-columns: var(--_layout);
  width: 100%;
}

@media (min-width: 48em) {
  main {
    --_layout: var(--site-wrapper-padding) 1fr var(--site-wrapper-padding);
    --_margin: var(--site-wrapper-margin-inline);
  }
}

main > * {
  grid-column: 2 / -2;
  min-width: 0;
}

section {
  container-type: inline-size;
}

/* Incredibly dirty workaround for z-index issues with section that are also container queries
and thus create a new stacking context.

TODO: come up with a better solution!
TODO: @MM haben problem bei inpage nav und stage content stacking - section mit nav steuert z-index und nicht nav selbst (so wäre es gedacht) -> dirty fix mit :not([nav]) uebrnimmt nav selbst z-index steuerung (so wie gedacht)
*/

:is(section, wm-section):not([nav]) {
  z-index: 5;
}

:is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) {
  z-index: 4;
}

:is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) {
  z-index: 3;
}

:is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) {
  z-index: 2;
}

:is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) + :is(section, wm-section):not([nav]) {
  z-index: 1;
}


section + section {
  margin-top: var(--section-margin);
}

/**
 ** ☕️☕️☕️ Footer ☕️☕️☕️
 **/
:is(body > footer, #root > footer, [role="contentinfo"]) {
  align-items:  var(--footer-alignment);;
  background-color: var(--footer-background);
  display: flex;
  flex-direction: column;
  gap: 1em;
  margin-block: var(--site-wrapper-margin-block);
  margin-inline: var(--site-wrapper-margin-inline);
  max-width: var(--site-wrapper-width);
  padding-inline: var(--site-wrapper-padding);
  padding-block: var(--footer-padding-block);
  text-align: var(--footer-text-align);
}